[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\yashu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\yashu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 22)
[debug] Load.defaultLoad until apply took 146.2249ms
[debug]           Load.loadUnit: plugins took 109.1113ms
[debug]           Load.loadUnit: defsScala took 0.5765ms
[debug] [Loading] Scanning directory C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport\project
[debug]             Load.loadUnit: mkEval took 4.4694ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.9528 ms
[info] loading settings for project chandylamport-build from idea.sbt ...
[debug]               Load.resolveProject(chandylamport-build) took 39.0503ms
[debug]             Load.loadTransitive: finalizeProject(Project(id chandylamport-build, base: C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport\project, plugins: List(<none>))) took 65.4329ms
[debug] [Loading] Done in C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport\project, returning: (chandylamport-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2278.6646ms
[debug]           Load.loadUnit: cleanEvalClasses took 68.6903ms
[debug]         Load.loadUnit(file:/C:/Users/yashu/OneDrive/Desktop/Project%20distr/ChandyLamport/project/, ...) took 2462.9168ms
[debug]       Load.apply: load took 2578.3912ms
[debug]       Load.apply: resolveProjects took 4.4563ms
[debug]       Load.apply: finalTransforms took 57.7449ms
[debug]       Load.apply: config.delegates took 6.3311ms
[debug]       Load.apply: Def.make(settings)... took 447.7467ms
[debug]       Load.apply: structureIndex took 103.3857ms
[debug]       Load.apply: mkStreams took 1.5537ms
[info] loading project definition from C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5257.9407ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport
[debug]       Load.loadUnit: mkEval took 0.2117ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3094 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 29.2222ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport, plugins: List(<none>))) took 33.6878ms
[debug] [Loading] Done in C:\Users\yashu\OneDrive\Desktop\Project distr\ChandyLamport, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1101.5113ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.4243ms
[debug]   Load.loadUnit(file:/C:/Users/yashu/OneDrive/Desktop/Project%20distr/ChandyLamport/, ...) took 6375.6136ms
[debug] Load.apply: load took 6403.7937ms
[debug] Load.apply: resolveProjects took 0.1194ms
[debug] Load.apply: finalTransforms took 43.4072ms
[debug] Load.apply: config.delegates took 0.4545ms
[debug] Load.apply: Def.make(settings)... took 90.813ms
[debug] Load.apply: structureIndex took 25.6129ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to ProjectScala (in build file:/C:/Users/yashu/OneDrive/Desktop/Project%20distr/ChandyLamport/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59569 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59569, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ProjectScala (in build file:/C:/Users/yashu/OneDrive/Desktop/Project%20distr/ChandyLamport/)
[debug] > Exec(idea-shell, None, None)
